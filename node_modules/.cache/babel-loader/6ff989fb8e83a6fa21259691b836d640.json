{"ast":null,"code":"var _jsxFileName = \"/Users/aslalamentik/Desktop/salarysprout/src/components/UserProfile.js\";\nimport React from 'react';\nimport { useEffect, useRef } from 'react';\nimport algosdk from 'algosdk';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { fbase } from './base';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport FormControl from '@material-ui/core/FormControl';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Hidden from '@material-ui/core/Hidden';\nimport Link from '@material-ui/core/Link';\nimport Divider from '@material-ui/core/Divider';\nimport Container from '@material-ui/core/Container';\nimport Markdown from './Markdown';\nimport TextField from '@material-ui/core/TextField';\nimport post1 from './blog-post.1.md';\nimport post2 from './blog-post.2.md';\nimport post3 from './blog-post.3.md';\nimport '../css/style.css'; // Tell Webpack that Button.js uses these styles\n\nimport { blockStatement } from '@babel/types';\nexport default function UserProfile(props) {\n  const classes = props.classes,\n        db = props.db,\n        user = props.user;\n  console.log(user);\n  const keyWordsMap = {\n    \"name\": \"Name\",\n    \"accountAddress\": \"Account Address\",\n    \"company\": \"Company\",\n    \"position\": \"Position\",\n    \"yoe\": \"Years of Experience\",\n    \"salary\": \"Salary\"\n  };\n  let userRef = db.collection('users').doc(user.email.split('.').join(''));\n\n  const renderProfile = async () => {\n    let jsx = [];\n    let getDoc = await userRef.get().then(doc => {\n      if (!doc.exists) {\n        return React.createElement(React.Fragment, null, \"Profile not found. \");\n      } else {\n        const data = doc.data();\n\n        for (var a in keyWordsMap) {\n          jsx.push(React.createElement(React.Fragment, null, keyWordsMap[a], \" + \\\" : \\\" + \", data[a], \" \"));\n        }\n\n        return jsx;\n      }\n    }).catch(err => {\n      console.log('Error getting document', err);\n    });\n  };\n\n  return React.createElement(Grid, {\n    item: true,\n    key: \"userProfile\",\n    xs: 12,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.cardDetails,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"app-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"app-box-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"User Profile\"), React.createElement(\"div\", {\n    className: \"app-box-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, renderProfile())))));\n}","map":{"version":3,"sources":["/Users/aslalamentik/Desktop/salarysprout/src/components/UserProfile.js"],"names":["React","useEffect","useRef","algosdk","makeStyles","CssBaseline","fbase","Button","InputLabel","MenuItem","FormHelperText","Select","Toolbar","IconButton","SearchIcon","FormControl","Paper","Typography","Grid","Card","CardActionArea","CardContent","CardMedia","Hidden","Link","Divider","Container","Markdown","TextField","post1","post2","post3","blockStatement","UserProfile","props","classes","db","user","console","log","keyWordsMap","userRef","collection","doc","email","split","join","renderProfile","jsx","getDoc","get","then","exists","data","a","push","catch","err","card","cardDetails"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useEffect, useRef} from 'react';\nimport algosdk from 'algosdk';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { fbase } from './base';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport FormControl from '@material-ui/core/FormControl';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Hidden from '@material-ui/core/Hidden';\nimport Link from '@material-ui/core/Link';\nimport Divider from '@material-ui/core/Divider';\nimport Container from '@material-ui/core/Container';\nimport Markdown from './Markdown';\nimport TextField from '@material-ui/core/TextField';\nimport post1 from './blog-post.1.md';\nimport post2 from './blog-post.2.md';\nimport post3 from './blog-post.3.md';\nimport '../css/style.css'; // Tell Webpack that Button.js uses these styles\nimport { blockStatement } from '@babel/types';\n\nexport default function UserProfile(props) {\n  const {classes, db, user} = props;\n  console.log(user);\n  const keyWordsMap = {\n    \"name\" : \"Name\",\n    \"accountAddress\" : \"Account Address\",\n    \"company\" : \"Company\",\n    \"position\" : \"Position\",\n    \"yoe\" : \"Years of Experience\",\n    \"salary\" : \"Salary\"\n  }\n  let userRef = db.collection('users').doc((user.email).split('.').join(''));\n  const renderProfile = async () => {\n    let jsx = [];\n    let getDoc = await userRef.get()\n    .then(doc => {\n      if (!doc.exists) {\n        return <>Profile not found. </>;\n      } else {\n        const data = doc.data();\n        for (var a in keyWordsMap) {\n          jsx.push(<>{keyWordsMap[a]} + \" : \" + {data[a]} </>)\n        }\n        return jsx;\n\n      }\n    })\n    .catch(err => {\n      console.log('Error getting document', err);\n    });\n\n  }\n\n  return (\n    <Grid item key=\"userProfile\" xs={12} md={6}>\n                  <Card className={classes.card}>\n                    <div className={classes.cardDetails}>\n                        <div className=\"app-box\">\n                            <div className='app-box-title'>User Profile</div>\n                              <div className='app-box-content'>{renderProfile()}</div>\n                        </div>\n                    </div>\n                  </Card>\n</Grid>\n  );\n}"]},"metadata":{},"sourceType":"module"}