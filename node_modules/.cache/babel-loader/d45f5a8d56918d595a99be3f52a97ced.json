{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/aslalamentik/Desktop/salarysprout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/aslalamentik/Desktop/salarysprout/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar request = require(\"superagent\");\n/**\n * removeEmpty gets a dictionary and removes empty values\n * @param obj\n * @returns {*}\n */\n\n\nfunction removeEmpty(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      if (!obj[key] || obj[key].length === 0) delete obj[key];\n    }\n  }\n\n  return obj;\n}\n\nfunction HTTPClient(requestHeaders, baseServer, port) {\n  // Do not need colon if port is empty\n  if (port !== '') {\n    baseServer += \":\" + port.toString();\n  }\n\n  this.address = baseServer;\n\n  this.get =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(path, query) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return request.get(this.address + path).set(requestHeaders).set('Accept', 'application/json').query(removeEmpty(query));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 6]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  this.post =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(path, data) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return request.post(this.address + path).set(requestHeaders).send(data);\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0.response;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[0, 6]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  this.delete =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(path, data) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return request.delete(this.address + path).set(requestHeaders).send(data);\n\n            case 3:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0.response;\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this, [[0, 6]]);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n}\n\nmodule.exports = {\n  HTTPClient: HTTPClient\n};","map":null,"metadata":{},"sourceType":"script"}